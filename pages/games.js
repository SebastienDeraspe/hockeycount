import Head from 'next/head';
import Image from 'next/image';
import { useState, useEffect, useRef } from 'react';
import styles from '../styles/Home.module.css'
import { useRouter } from 'next/router';
import Link from 'next/link';


function formatDate(date) {
  const d = new Date(date);
  const year = d.getFullYear();
  const month = (d.getMonth() + 1).toString().padStart(2, '0'); // months are 0-based
  const day = d.getDate().toString().padStart(2, '0');
  return `${year}-${month}-${day}`;
}

export default function Games(props) {  

const [gamesListing, setGamesListing] = useState(props.games);
const [gameID, setGameID] = useState();
const dateValue = formatDate(new Date());
const [message, setMessage] = useState();
const [status, setStatus] = useState();
const [dataDefault, setDataDefault] = useState({
  teamName : '',
  opponentName : '',
  gameDate : dateValue,
  gameID: 0,
  1: {
    tir: 0,
    tirContre: 0,
    but: 0,
    butContre: 0,
  },
  2: {
    tir: 0,
    tirContre: 0,
    but: 0,
    butContre: 0,
  },
  3: {
    tir: 0,
    tirContre: 0,
    but: 0,
    butContre: 0,
  }
})

const [game, setGame] = useState(dataDefault);

const creatGame = () => {

  setStatus('loading');
  setMessage('');


  const finalFormEndpoint = 'http://localhost:8888/api/reacthockeyapp/savegame.php';
  // const data = Array.from(e.target.elements)
  //   .filter((input) => input.name)
  //   .reduce((obj, input) => Object.assign(obj, { [input.name]: input.value }), {});

  // if (additionalData) {
  //   Object.assign(data, additionalData);
  // }

  fetch(`${process.env.NEXT_PUBLIC_API_URL}api/reacthockeyapp/newGame.php`, {
    method: 'POST',
    mode: 'no-cors',
    credentials: "include",
    headers: {
      Accept: 'application/json',
      'X-Api-Key': '9937c590e35c46cebe95fe69b4357ff0.GSFJgGTLedVhGLeiFkRJ1YNlDuZkyCQmu_uyIMozMRprwr2xBTOC4NY6Mu6bVOWe8fVds4sywoLhMbaHXNIBJA',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(game),
  })
    .then((response) => {
      if (response.status !== 200) {
        throw new Error(response.statusText);
      }

      return response.json();
    })
    .then(() => {
      setMessage("We'll be in touch soon.");
      setStatus('success');
    })
    .catch((err) => {
      setMessage(err.toString());
      setStatus('error');
    });
};

useEffect(()=> {


},[]);


const router = useRouter();


return (
    <div className={styles.container}>
      <Head>
        <title>Hockey Count</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Hockey Count</h1>
      <main className={styles.main}>
        <ul>
        { gamesListing.map((game, i) => {

            const gameData = JSON.parse(game.jsonGame);
            const teamName = gameData.teamName;
            console.log(gameData.teamName);
            const opponentName = gameData.opponentName;
            const gameDate = gameData.gameDate;
            
            return(
                <li key={game.gameID} ><Link  href={`/gamesedit/${game.gameID}`}  ><a>{teamName} {opponentName} {gameDate}</a></Link></li>                
            );
            setGameID(game.gameID);
  
        })} 
        </ul> 
        <button className={styles.pushable} onClick={creatGame}>
                  <span className={styles.shadow}></span>
                  <span className={styles.edge} ></span>
                  <span className={styles.front} >Creat A New Game</span>
          </button>

        </main>
    </div>
  )
}

export async function getStaticProps(context) {
    const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/reacthockeyapp/listGame.php`);
    const games = await res.json();
    console.log(games);

    return { 
      props: { games }, 
    }
  }
